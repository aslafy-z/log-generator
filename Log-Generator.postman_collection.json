{
	"info": {
		"_postman_id": "e40de9ff-249e-433b-91c8-be0cded72340",
		"name": "Log-Generator",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test",
			"item": [
				{
					"name": "Memory",
					"item": [
						{
							"name": "memory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/state/memory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"state",
										"memory"
									]
								}
							},
							"response": []
						},
						{
							"name": "memory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content test\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.megabyte).to.eql(100);",
											"  pm.expect(responseJson.duration).to.eql(15);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"megabyte\": 100,\n    \"duration\": 15\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/state/memory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"state",
										"memory"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CPU",
					"item": [
						{
							"name": "cpu",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/state/cpu",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"state",
										"cpu"
									]
								}
							},
							"response": []
						},
						{
							"name": "cpu",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content test\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.load).to.eql(5.7);",
											"  pm.expect(responseJson.duration).to.eql(10);",
											"  pm.expect(responseJson.core).to.eql(2);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"load\": 5.7,\n    \"duration\": 10,\n    \"core\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/state/cpu",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"state",
										"cpu"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "LogLevel",
					"item": [
						{
							"name": "log_level",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {",
											"    pm.response.to.have.status(200);",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/state/log_level",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"state",
										"log_level"
									]
								}
							},
							"response": []
						},
						{
							"name": "log_level",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content test\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.level).to.eql(\"debug\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"level\": \"debug\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/state/log_level",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"state",
										"log_level"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "State",
					"item": [
						{
							"name": "state",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"state"
									]
								}
							},
							"response": []
						},
						{
							"name": "state",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content test\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.cpu.load).to.eql(5.3);",
											"  pm.expect(responseJson.cpu.duration).to.eql(11);",
											"  pm.expect(responseJson.cpu.core).to.eql(1);",
											"  pm.expect(responseJson.memory.megabyte).to.eql(70);",
											"  pm.expect(responseJson.memory.duration).to.eql(2);",
											"  pm.expect(responseJson.log_level.level).to.eql(\"debug\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memory\": {\n        \"megabyte\": 70,\n        \"duration\": 2\n    },\n    \"cpu\": {\n        \"load\": 5.3,\n        \"duration\": 11,\n        \"core\": 1\n    },\n    \"log_level\": {\n        \"level\": \"debug\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"state"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "localhost:11000"
		}
	]
}